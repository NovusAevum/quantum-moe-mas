[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "quantum-moe-mas"
version = "0.1.0"
description = "Quantum-Infused Mixture of Experts Multi-Agent System with Adaptive Multi-Modal RAG"
authors = [
    {name = "Wan Mohamad Hanis bin Wan Hassan", email = "hanis@example.com"}
]
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.11"
keywords = ["ai", "quantum", "moe", "multi-agent", "rag", "machine-learning"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    # Core AI/ML Frameworks
    "crewai>=0.28.0",
    "langchain>=0.1.0",
    "langchain-community>=0.0.20",
    "langchain-openai>=0.0.8",
    "langchain-anthropic>=0.1.0",
    "openai>=1.12.0",
    "anthropic>=0.18.0",
    
    # Data & Storage
    "supabase>=2.4.0",
    "redis>=5.0.0",
    "sqlalchemy>=2.0.0",
    "psycopg2-binary>=2.9.0",
    "alembic>=1.13.0",
    
    # Vector Database & Embeddings
    "chromadb>=0.4.0",
    "sentence-transformers>=2.5.0",
    "faiss-cpu>=1.7.0",
    
    # Web & API Framework
    "streamlit>=1.31.0",
    "fastapi>=0.109.0",
    "uvicorn[standard]>=0.27.0",
    "pydantic>=2.6.0",
    "pydantic-settings>=2.1.0",
    
    # Quantum Computing
    "qiskit>=0.45.0",
    "qiskit-aer>=0.13.0",
    "numpy>=1.24.0",
    "scipy>=1.12.0",
    
    # Security & Authentication
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.0",
    "python-multipart>=0.0.9",
    "cryptography>=42.0.0",
    
    # Monitoring & Logging
    "structlog>=24.1.0",
    "prometheus-client>=0.20.0",
    "opentelemetry-api>=1.22.0",
    "opentelemetry-sdk>=1.22.0",
    "opentelemetry-instrumentation-fastapi>=0.43b0",
    
    # HTTP & Networking
    "httpx>=0.27.0",
    "aiohttp>=3.9.0",
    "requests>=2.31.0",
    
    # Data Processing
    "pandas>=2.2.0",
    "polars>=0.20.0",
    "pyarrow>=15.0.0",
    
    # Configuration & Environment
    "python-dotenv>=1.0.0",
    "click>=8.1.0",
    "typer>=0.9.0",
    
    # Utilities
    "rich>=13.7.0",
    "tenacity>=8.2.0",
    "schedule>=1.2.0",
    "python-dateutil>=2.8.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.12.0",
    "pytest-xdist>=3.5.0",
    "httpx>=0.27.0",  # For testing FastAPI
    
    # Code Quality
    "black>=24.0.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "bandit>=1.7.0",
    "safety>=3.0.0",
    
    # Pre-commit hooks
    "pre-commit>=3.6.0",
    
    # Documentation
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.5.0",
    "mkdocstrings[python]>=0.24.0",
]

production = [
    # Production WSGI/ASGI servers
    "gunicorn>=21.2.0",
    "uvicorn[standard]>=0.27.0",
    
    # Production monitoring
    "sentry-sdk[fastapi]>=1.40.0",
    "newrelic>=9.5.0",
]

[project.urls]
Homepage = "https://github.com/wanhanis/quantum-moe-mas"
Documentation = "https://quantum-moe-mas.readthedocs.io"
Repository = "https://github.com/wanhanis/quantum-moe-mas.git"
Issues = "https://github.com/wanhanis/quantum-moe-mas/issues"

[project.scripts]
quantum-moe-mas = "quantum_moe_mas.cli:main"

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
quantum_moe_mas = ["py.typed", "config/*.yaml", "config/*.json"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["quantum_moe_mas"]

# MyPy configuration
[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "crewai.*",
    "qiskit.*",
    "supabase.*",
    "chromadb.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "security: marks tests as security tests",
]

# Coverage configuration
[tool.coverage.run]
source = ["src/quantum_moe_mas"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Bandit security linter configuration
[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection_process for tests